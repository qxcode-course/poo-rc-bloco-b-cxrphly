{
    "patches": [
        {
            "label": "2025-10-16_09-24-40",
            "content": "@@ -505,24 +505,30 @@\n __capacidade\n+%0A%0A    \n %0A    def tem\n@@ -576,127 +576,8 @@\n %3E 0%0A\n-    def getCarga(self):%0A        return self.__carga%0A    def getCapacidade(self):%0A        return self.__capacidade%0A    %0A\n     \n@@ -806,38 +806,8 @@\n lse%0A\n-        self.__tempoUsado = 0%0A\n     \n@@ -1004,32 +1004,74 @@\n __ligado = True%0A\n+            print(%22msg: Notebook ligado%22)%0A\n         elif sel\n@@ -1211,39 +1211,32 @@\n (self):%0A        \n-if not \n self.__ligado:%0A \n@@ -1224,38 +1224,41 @@\n    self.__ligado\n-:%0A    \n+ = False%0A\n         print(%22f\n@@ -1260,77 +1260,34 @@\n nt(%22\n-fail: j%C3%A1 desligado%22)%0A            return%0A        self.__ligado = False\n+msg: Notebook desligado%22)%0A\n %0A   \n@@ -1312,22 +1312,24 @@\n lf, \n-capacidade:int\n+bateria: Bateria\n ):%0A \n@@ -1327,35 +1327,32 @@\n teria):%0A        \n-if \n self.__bateria:%0A\n@@ -1341,38 +1341,43 @@\n   self.__bateria\n-:%0A    \n+ = bateria%0A\n         print(%22f\n@@ -1379,25 +1379,21 @@\n nt(%22\n-fail: b\n+msg: B\n ateria \n-ja \n cone\n@@ -1403,72 +1403,8 @@\n da%22)\n-%0A            return%0A        self.__bateria = Bateria(capacidade)\n %0A%0A  \n@@ -1444,39 +1444,32 @@\n teria):%0A        \n-if not \n self.__bateria =\n@@ -1472,15 +1472,13 @@\n ia =\n-=\n  None\n-:\n %0A   \n@@ -1474,36 +1474,32 @@\n  = None%0A        \n-    \n print(%22msg: Bate\n@@ -1502,19 +1502,16 @@\n Bateria \n-ja \n removida\n@@ -1521,250 +1521,55 @@\n     \n-        return%0A        print(f%22bateria removida%22)%0A        self.__bateria = None%0A        self.__ligado = False%0A%0A    def setCarregador(self, potencia:int):%0A        if self.__carregador:%0A            print(%22fail: ja na tomada%22)%0A            return\n+def setCarregador(self, carregador:Carregador):\n %0A   \n@@ -1593,17 +1593,17 @@\n gador = \n-C\n+c\n arregado\n@@ -1607,18 +1607,8 @@\n ador\n-(potencia)\n %0A   \n@@ -1781,74 +1781,8 @@\n o%22)%0A\n-        if not self.__bateria:%0A            self.__ligado = False%0A%0A\n     \n@@ -1915,43 +1915,8 @@\n urn%0A\n-        self.__tempoUsado += tempo%0A\n     \n@@ -2082,27 +2082,16 @@\n a(),\n+ \n tempo)%0A\n-           %0A\n     \n@@ -2119,61 +2119,8 @@\n ia:%0A\n-            carga_inicio = self.__bateria.getCarga()%0A\n     \n@@ -2235,33 +2235,43 @@\n nt(%22\n-fail: bateria descarregou\n+bateira zeradad, notebook desligado\n %22)%0A \n@@ -2319,80 +2319,103 @@\n     \n-        self.__tempoUsado -= (tempo - carga_inicio)%0A        elif self.__\n+elif not self.__bateria or not self.__carregador():%0A            print(%22fail: sem bateria e sem \n carr\n@@ -2412,33 +2412,34 @@\n e sem carregador\n-:\n+%22)\n %0A            pas\n@@ -2439,63 +2439,56 @@\n     \n-pass%0A        else:%0A            print(%22fail: desligado%22)\n+self.__ligado = False%0A        if self.__bateria:\n %0A   \n@@ -2496,37 +2496,48 @@\n         \n+print(\n self.__\n-ligado = False\n+bateria.getBateria)\n %0A%0A    de\n@@ -2622,25 +2622,14 @@\n     \n-%0A        texto = \n+print(\n f%22No\n@@ -2634,16 +2634,17 @@\n Notebook\n+:\n  %7Bstatus\n@@ -2645,16 +2645,17 @@\n status%7D%22\n+)\n %0A       \n@@ -2657,38 +2657,39 @@\n       if self.__\n-ligado\n+bateria\n :%0A            te\n@@ -2690,131 +2690,66 @@\n     \n-texto += f%22por %7Bself.__tempoUsado%7D min%22%0A        imprimir = %5B%5D%0A        if self.__carregador:%0A            imprimir.append(f%22C\n+print(f%22bateria: %7Bself.__bateria.getBateria()%7D, potencia c\n arre\n@@ -2753,16 +2753,17 @@\n rregador\n+:\n  %7Bself._\n@@ -2792,9 +2792,8 @@\n a()%7D\n-W\n %22)%0A \n@@ -2799,33 +2799,20 @@\n         \n-if self.__bateria\n+else\n :%0A      \n@@ -2821,164 +2821,27 @@\n     \n-im\n pri\n-mir.append(f%22Bateria %7Bself.__bateria.getBateria()%7D%22)%0A        if imprimir:%0A            texto += %22, %22 + %22, %22 .join(imprimir)%0A        %0A        print(texto\n+nt(%22sem bateria%22\n )%0A%0A%0A\n@@ -3360,28 +3360,33 @@\n regador(\n-int(\n+potencia=\n args%5B1%5D)\n )%0A      \n@@ -3369,33 +3369,32 @@\n otencia=args%5B1%5D)\n-)\n %0A        elif ar\n@@ -3527,20 +3527,8 @@\n ria(\n-int(args%5B1%5D)\n )%0A  \n@@ -3556,113 +3556,14 @@\n  %22rm\n-_battery%22:%0A            notebook.rmBateria()%0A        else:%0A            print(%22fail: comando invalido%22)%0A%0Amain()\n+%22%0A        \n",
            "lines": "111"
        },
        {
            "label": "2025-10-16_09-55-22",
            "content": "@@ -1677,32 +1677,40 @@\n t self.__bateria\n+ == None\n :%0A            pr\n@@ -2135,97 +2135,8 @@\n r):%0A\n-        if not self.__carregador:%0A            print(%22sem carregador%22)%0A            return%0A\n     \n@@ -2312,35 +2312,8 @@\n t):%0A\n-        tempo = int(tempo)%0A\n     \n@@ -3658,18 +3658,16 @@\n Notebook\n-()\n %0A    whi\n",
            "lines": "144"
        },
        {
            "label": "2025-10-16_10-01-29",
            "content": "@@ -3313,17 +3313,16 @@\n Notebook\n-:\n  %7Bstatus\n",
            "lines": "148"
        },
        {
            "label": "2025-10-16_10-01-52",
            "content": "class Bateria:\n    def __init__(self, capacidade: int):\n        self.__capacidade = capacidade\n        self.__carga = capacidade\n\n    def getBateria(self):\n        return f\"{self.__carga}/{self.__capacidade}\"\n    def usingBateria(self, tempo:int):\n        self.__carga -= tempo\n        if self.__carga < 0:\n            self.__carga = 0\n    def carregar(self, potencia:int , tempo:int):\n        self.__carga += potencia * tempo\n        if self.__carga > self.__capacidade:\n            self.__carga = self.__capacidade\n    def temCarga(self):\n        return self.__carga > 0\n    def getCarga(self):\n        return self.__carga\n    def getCapacidade(self):\n        return self.__capacidade\n    \n    \n\nclass Carregador:\n    def __init__(self, potencia:int):\n        self.__potencia = potencia\n    def getPotencia(self):\n        return self.__potencia\n    \nclass Notebook:\n    def __init__(self):\n        self.__ligado = False\n        self.__tempoUsado = 0\n        self.__bateria: Bateria | None = None\n        self.__carregador: Carregador | None = None\n\n    def ligar(self):\n        if self.__bateria and self.__bateria.temCarga():\n            self.__ligado = True\n        elif self.__carregador:\n            self.__ligado = True\n        else:\n            print(\"fail: sem bateria ou carregador\")\n\n    def desligar(self):\n        if not self.__ligado:\n            print(\"fail: j\u00e1 desligado\")\n            return\n        self.__ligado = False\n    def setBateria(self, capacidade:int):\n        if self.__bateria:\n            print(\"fail: bateria ja conectada\")\n            return\n        self.__bateria = Bateria(capacidade)\n\n    def rmBateria(self, bateria: Bateria):\n        if not self.__bateria:\n            print(\"msg: Bateria ja removida\")\n            return\n        print(f\"bateria removida\")\n        self.__bateria = None\n        self.__ligado = False\n\n    def setCarregador(self, potencia:int):\n        if self.__carregador:\n            print(\"fail: ja na tomada\")\n            return\n        self.__carregador = Carregador(potencia)\n        print(\"msg: Carregador conectado\")\n    def rmCarregador(self, carregador:Carregador):\n        if not self.__carregador:\n            print(\"sem carregador\")\n            return\n        self.__carregador = None\n        print(\"msg: carregador desconectado\")\n        if not self.__bateria:\n            self.__ligado = False\n\n    def usar(self, tempo: int):\n        tempo = int(tempo)\n        if not self.__ligado:\n            print(\"fail: ligue o notebook primeiro\")\n            return\n        self.__tempoUsado += tempo\n        print(f\"msg: Usando por {tempo} minutos\")\n        if self.__bateria and self.__carregador:\n            self.__bateria.carregar(self.__carregador.getPotencia(),tempo)\n           \n        elif self.__bateria:\n            carga_inicio = self.__bateria.getCarga()\n            self.__bateria.usingBateria(tempo)\n            if not self.__bateria.temCarga():\n                print(\"fail: bateria descarregou\")\n                self.__ligado = False\n                self.__tempoUsado -= (tempo - carga_inicio)\n        elif self.__carregador:\n            pass\n        else:\n            print(\"fail: desligado\")\n            self.__ligado = False\n\n    def show(self):\n        status = \"ligado\" if self.__ligado else \"desligado\"\n        \n        texto = f\"Notebook: {status}\"\n        if self.__ligado:\n            texto += f\"por {self.__tempoUsado} min\"\n        imprimir = []\n        if self.__carregador:\n            imprimir.append(f\"Carregador {self.__carregador.getPotencia()}W\")\n        if self.__bateria:\n            imprimir.append(f\"Bateria {self.__bateria.getBateria()}\")\n        if imprimir:\n            texto += \", \" + \", \" .join(imprimir)\n        \n        print(texto)\n\n\ndef main():\n    notebook = Notebook()\n    while True:\n        line = input()\n        print(\"$\" + line)\n        args:list[str] = line.split(\" \")\n\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"show\":\n            notebook.show()\n        elif args[0] == \"turn_on\":\n            notebook.ligar()\n        elif args[0] == \"turn_off\":\n            notebook.desligar\n        elif args[0] == \"use\":\n            notebook.usar(args[1])\n        elif args[0] == \"set_charger\":\n            notebook.setCarregador(int(args[1]))\n        elif args[0] == \"rm_charger\":\n            notebook.rmCarregador()\n        elif args[0] == \"set_battery\":\n            notebook.setBateria(int(args[1]))\n        elif args[0] == \"rm_battery\":\n            notebook.rmBateria()\n        else:\n            print(\"fail: comando invalido\")\n\nmain()",
            "lines": "148"
        }
    ]
}