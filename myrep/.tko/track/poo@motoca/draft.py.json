{
    "patches": [
        {
            "label": "2025-10-21_10-59-57",
            "content": "@@ -333,16 +333,20 @@\n ower:int\n+ = 1\n , time:i\n@@ -347,16 +347,20 @@\n time:int\n+ = 0\n ):%0A     \n@@ -970,26 +970,8 @@\n ():%0A\n-    moto = Moto()%0A\n     \n@@ -1163,11 +1163,8 @@\n oto(\n-1,0\n )%0A  \n",
            "lines": "56"
        },
        {
            "label": "2025-10-21_11-01-43",
            "content": "@@ -889,129 +889,54 @@\n     \n-statusPerson = self.__pessoa.getName if self.__pessoa else %22(empty)%22%0A        return f%22power:%7Bself.__power%7D, \n+return f%22%7Bself.__power%7D %7Bself.__\n time\n-:\n+%7D \n %7Bself.__\n time\n@@ -935,34 +935,14 @@\n f.__\n-time%7D person:%7BstatusPerson\n+pessoa\n %7D%22%0A \n",
            "lines": "57"
        },
        {
            "label": "2025-10-21_11-13-28",
            "content": "@@ -337,12 +337,8 @@\n :int\n- = 1\n , ti\n@@ -339,28 +339,24 @@\n nt, time:int\n- = 0\n ):%0A        s\n@@ -850,28 +850,24 @@\n  removed%22)%0A%0A\n-    \n     def __st\n@@ -885,20 +885,16 @@\n         \n-   \n- \n statusPe\n@@ -921,18 +921,16 @@\n .getName\n-()\n  if self\n@@ -954,20 +954,16 @@\n empty)%22%0A\n-    \n         \n",
            "lines": "58"
        },
        {
            "label": "2025-10-21_11-21-34",
            "content": "@@ -858,24 +858,28 @@\n  removed%22)%0A%0A\n+    \n     def __st\n@@ -881,32 +881,36 @@\n  __str__(self):%0A\n+    \n         statusPe\n@@ -972,16 +972,20 @@\n empty)%22%0A\n+    \n         \n",
            "lines": "58"
        },
        {
            "label": "2025-10-21_11-23-15",
            "content": "@@ -1021,17 +1021,16 @@\n .__time%7D\n-,\n  person:\n",
            "lines": "58"
        },
        {
            "label": "2025-10-21_11-23-33",
            "content": "@@ -912,12 +912,8 @@\n n = \n-f%22(%7B\n self\n@@ -935,36 +935,8 @@\n me()\n-%7D:%7Bself.__pessoa.getAge()%7D)%22\n  if \n",
            "lines": "58"
        },
        {
            "label": "2025-10-21_11-25-48",
            "content": "@@ -333,16 +333,20 @@\n ower:int\n+ = 1\n , time:i\n@@ -347,16 +347,20 @@\n time:int\n+ = 0\n ):%0A     \n",
            "lines": "58"
        },
        {
            "label": "2025-10-21_11-26-18",
            "content": "@@ -337,10 +337,8 @@\n :int\n-=1\n , ti\n@@ -347,10 +347,8 @@\n :int\n-=0\n ):%0A \n@@ -818,24 +818,31 @@\n             \n+return \n print(f%22%7Baux\n@@ -1088,16 +1088,34 @@\n main():%0A\n+    moto = Moto()%0A\n     whil\n@@ -1275,16 +1275,16 @@\n %22init%22:%0A\n-\n         \n@@ -1295,24 +1295,27 @@\n moto = Moto(\n+1,0\n )%0A        el\n",
            "lines": "58"
        },
        {
            "label": "2025-10-21_15-45-34",
            "content": "@@ -1282,19 +1282,8 @@\n oto(\n-int(arg%5B1%5D)\n )%0A  \n@@ -1351,20 +1351,15 @@\n %5B1%5D,\n-int(\n arg%5B2%5D)\n-)\n %0A   \n",
            "lines": "57"
        },
        {
            "label": "2025-10-21_15-48-43",
            "content": "@@ -853,609 +853,8 @@\n ed%22)\n-%0A    def buyTime(self, amount:int):%0A        self.__time += amount%0A        return%0A    def driveMotoca(self, distance:int ):%0A        if self.__time == 0:%0A            print(%22fail: buy time first%22)%0A            return%0A        elif not self.__pessoa:%0A            print(%22fail: empty motorcycle%22)%0A            return%0A        elif self.__pessoa.getAge() %3E 10:%0A            print(%22fail: too old to drive%22)%0A            return%0A        else:%0A            aux_time = self.__time%0A            self.__time -= distance%0A            if self.__time == 0:%0A                print(f%22fail: time finished after %7Baux_time%7D minutes%22)\n %0A%0A  \n@@ -1066,16 +1066,21 @@\n Person%7D%22\n+%0A    \n %0A%0Adef ma\n@@ -1089,26 +1089,8 @@\n ():%0A\n-    moto = Moto()%0A\n     \n@@ -1504,16 +1504,16 @@\n %22show%22:%0A\n+\n         \n@@ -1532,150 +1532,8 @@\n to)%0A\n-        elif arg%5B0%5D == %22buy%22:%0A            moto.buyTime(int(arg%5B1%5D))%0A        elif arg%5B0%5D == %22drive%22:%0A            moto.driveMotoca(int(arg%5B1%5D))%0A\n     \n",
            "lines": "57"
        },
        {
            "label": "2025-10-22_09-07-11",
            "content": "@@ -765,43 +765,14 @@\n     \n-print(f%22%7Bself.__pessoa.getName()%7D:%7B\n+aux = \n self\n@@ -784,20 +784,8 @@\n ssoa\n-.getAge()%7D%22)\n %0A   \n@@ -810,24 +810,60 @@\n ssoa = None%0A\n+            print(f%22%7Baux%7D removed%22)%0A\n     def buyT\n@@ -1378,9 +1378,9 @@\n ime \n-%3C\n+=\n = 0:\n@@ -1454,187 +1454,8 @@\n es%22)\n-%0A                self.__time = 0%0A%0A    def honk(self):%0A        honk = %5B'P','','m'%5D%0A        for i in range(self.__power):%0A            honk.insert(1,%22e%22)%0A        print(%22%22.join(honk))\n %0A%0A  \n@@ -2288,63 +2288,8 @@\n %5D))%0A\n-        elif arg%5B0%5D == %22honk%22:%0A            moto.honk()%0A\n     \n",
            "lines": "79"
        },
        {
            "label": "2025-10-22_09-30-42",
            "content": "class Pessoa:\n    def __init__(self, name:str = \"\", age:int = 0):\n        self.__age = age\n        self.__name = name\n    def getAge(self):\n        return self.__age\n    def getName(self):\n        return self.__name\n    def __str__(self) -> str:\n        return f\"{self.__name} {self.__age}\"\n    \nclass Moto:\n    def __init__(self, power:int=1, time:int=0):\n        self.__pessoa: Pessoa | None = None\n        self.__power: int =  power\n        self.__time: int = time\n        \n    def insertPerson(self, person: Pessoa):\n        if self.__pessoa:\n            print(\"fail: busy motorcycle\")\n        else:\n            self.__pessoa = person\n\n    def removePerson(self):\n        if not self.__pessoa:\n            print(\"fail: empty motorcycle\")\n        else:\n            print(f\"{self.__pessoa.getName()}:{self.__pessoa.getAge()}\")\n            self.__pessoa = None\n    def buyTime(self, amount:int):\n        self.__time += amount\n        return\n    def driveMotoca(self, distance:int ):\n        if self.__time == 0:\n            print(\"fail: buy time first\")\n            return\n        elif not self.__pessoa:\n            print(\"fail: empty motorcycle\")\n            return\n        elif self.__pessoa.getAge() > 10:\n            print(\"fail: too old to drive\")\n            return\n        else:\n            aux_time = self.__time\n            self.__time -= distance\n            if self.__time <= 0:\n                print(f\"fail: time finished after {aux_time} minutes\")\n                self.__time = 0\n\n    def honk(self):\n        honk = ['P','','m']\n        for i in range(self.__power):\n            honk.insert(1,\"e\")\n        print(\"\".join(honk))\n\n    def __str__(self):\n        statusPerson = f\"({self.__pessoa.getName()}:{self.__pessoa.getAge()})\" if self.__pessoa else \"(empty)\"\n        return f\"power:{self.__power}, time:{self.__time}, person:{statusPerson}\"\n\ndef main():\n    moto = Moto()\n    while True:\n        line = input()\n        print(\"$\"+line)\n        arg = line.split(\" \")\n\n        if arg[0] == \"end\":\n            break\n        if arg[0] == \"init\":\n            moto = Moto(int(arg[1]))\n        elif arg[0] == \"enter\":\n            person = Pessoa(arg[1],int(arg[2]))\n            moto.insertPerson(person)\n        elif arg[0] == \"leave\":\n            moto.removePerson()\n        elif arg[0] == \"show\":\n            print(moto)\n        elif arg[0] == \"buy\":\n            moto.buyTime(int(arg[1]))\n        elif arg[0] == \"drive\":\n            moto.driveMotoca(int(arg[1]))\n        elif arg[0] == \"honk\":\n            moto.honk()\n        else:\n            print(\"comando invalido\")\n\nmain()\n",
            "lines": "87"
        }
    ]
}