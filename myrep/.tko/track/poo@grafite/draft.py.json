{
    "patches": [
        {
            "label": "2025-10-23_15-22-41",
            "content": "@@ -1,687 +0,0 @@\n-class Lead:%0A    def __init__(self, thickness:int, hardness:str, size:int ):%0A        self.__thickness = thickness%0A        self.__hardness = hardness%0A        self.__size = size%0A%0A    def usagePerPage(self):%0A%0A    def __str__(self):%0A        return f%22%7Bself.__thickness%7D:%7Bself.__hardness%7D:%7Bself.__size%7D%22%0A    %0Aclass Pencil:%0A    def __init__(self, thickness:int):%0A        self.__thickness = thickness%0A        self.__tip: Lead %7C None = None%0A%0A    def hasLead(self):%0A        return self.tip if not None else False%0A    %0A    def __str__(self):%0A        return f%22%22%0A    def insertLead(self, tip:Lead):%0A        self.__tip = tip%0A    def removeLead(self):%0A        self.__tip = None%0A    def writePage(self):%0A\n",
            "lines": "0"
        },
        {
            "label": "2025-10-23_15-47-35",
            "content": "class Lead:\n    def __init__(self, thickness:int, hardness:str, size:int ):\n        self.__thickness = thickness\n        self.__hardness = hardness\n        self.__size = size\n\n    def usagePerPage(self):\n\n    def __str__(self):\n        return f\"{self.__thickness}:{self.__hardness}:{self.__size}\"\n    \nclass Pencil:\n    def __init__(self, thickness:int):\n        self.__thickness = thickness\n        self.__tip: Lead | None = None\n\n    def hasLead(self):\n        return self.tip if not None else False\n    \n    def __str__(self):\n        return f\"\"\n    def insertLead(self, tip:Lead):\n        self.__tip = tip\n    def removeLead(self):\n        self.__tip = None\n    def writePage(self):\n",
            "lines": "26"
        }
    ]
}